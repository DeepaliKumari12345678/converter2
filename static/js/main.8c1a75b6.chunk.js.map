{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLowClick","toLowerCase","handleCopy","console","log","document","getElementById","select","setSelectionRange","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","aboutText","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.8c1a75b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/*  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/*}\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>*/}\r\n          </ul>\r\n          {/* Uncomment if you want to include search functionality */}\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              {props.mode === 'light' ? 'Enable Dark Mode' : 'Enable Light Mode'}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n  mode: PropTypes.string.isRequired,\r\n  toggleMode: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from 'react'\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n   // console.log(\"uppercase was clicked  \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"convert upper case\", \"success\");\r\n  }\r\n  const handleLowClick = () => {\r\n   // console.log(\"uppercase was clicked  \" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const handleOnChange = (event) => {\r\n   // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n  const handleCopy = () => {\r\n    console.log(\"i am copy\");\r\n    var text = document.getElementById( \"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    //navigator.clipboard.writetext(text.value);\r\n  }\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n      <div className='container' style={{color: props.mode ==='dark'?'blue':'black'}}>\r\n\r\n        <h1>{props.heading}</h1>\r\n    \r\n      <div className=\"mb-3\"  >\r\n        \r\n  \r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode ==='dark'?'grey':'white' , color: props.mode ==='dark'?'blue':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n          <button className='btn btn-primary' onClick={handleUpClick}>Convert to upper case</button>\r\n          <button className='btn btn-primary mx-2' onClick={handleLowClick}>Convert to lower case</button>\r\n           <button className='btn btn-primary mx-2' onClick={handleCopy}>Copy</button>\r\n        </div>\r\n      \r\n      <div className='container my-3' style={{backgroundColor: props.mode ==='dark'?'grey':'white',color: props.mode ==='dark'?'blue':'black'}}>\r\n        <h2>your text summary</h2>\r\n        <p>{text.split(\" \").length} and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in textbox above and preview it here\"}</p>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","// Alert.js\r\nimport React from 'react';\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    if (word) {\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n//import About from './Components/About';\nimport Alert from './Components/Alert';\nimport React, { useState } from 'react';\n/*import {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";*/\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = 'Converter - Dark Mode Enabled';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/*<Router>*/}\n        <Navbar title=\"Converter\" aboutText=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <div className='container my-3'>\n        <Alert alert={alert} />\n        {/*<Routes>*\n            <Route exact path=\"/about\" element={<About />} />*/}\n        {/*<Route exact path=\"/\" element={*/}<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/*</Routes></>*/}\n          \n        </div>\n      {/*</Router>*/ }\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}